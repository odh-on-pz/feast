# Build the manager binary
FROM registry.access.redhat.com/ubi8/go-toolset:1.23.6-2@sha256:b151bd4c8789f94c4c6db99e2a2ee39de1d86b6e75da4a269e1533d500f2f62d AS builder
ARG TARGETOS
ARG TARGETARCH

# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY cmd/main.go cmd/main.go
COPY api/ api/
COPY internal/controller/ internal/controller/

# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o manager cmd/main.go

FROM registry.access.redhat.com/ubi8/ubi-micro:8.10@sha256:9b1da1a65e3c8c95da436402a9ecf5e1e8df9cbee33bd5e1e43c02faf914daae
WORKDIR /
COPY --from=builder /opt/app-root/src/manager .
USER 65532:65532

ENTRYPOINT ["/manager"]

LABEL com.redhat.component="odh-feast-operator" \
      name="odh-feast-operator-rhel8" \
      description="odh-feast-operator" \
      summary="odh-feast-operator" \
      io.openshift.expose-services="65532" \
      io.k8s.display-name="odh-feast-operator" \
      io.k8s.description="odh-feast-operator"
